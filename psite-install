#!/bin/bash
# psite-install --name site --path ~/workspace/drupal --user root -pass pass --profile standard
# psite-install --name flight --repo git@github.com:albatrossdigital/flight-drops-7.git --profile flight

path='.'
name='self'
profile='standard'
user=$MYSQL_USER
pass=$MYSQL_PASS
host='localhost'
subdir=$name.local
domain=$name.local
nodrupal=0
sql=0
apache_only=0

while test $# -gt 0; do
  case "$1" in
    -h|--help)
      echo "psite-alias"
      echo " "
      echo "psite-install --path=/var/www/html/drupal --user=root --pass=pass --profile=standard"
      echo "psite-install --path=/var/www/html/workspace --repo=\"git@github.com:albatrossdigital/flight-drops-7.git\" --profile=flight"      
      echo " "
      echo "arguments:"
      echo 
      echo "options:"
      echo "--path         the path (defaults to .)"
      echo "--name         the site name (defaults to self)"
      echo "--subdir       the directory for settings.php within sites/ (defaults to self.local, may also be set to default)"
      echo "--domain       the site domain (defaults to self.local)"
      echo "--repo         the path (default: blank, no cloning)"  
      echo "--profile      specify mysql password (defaults to standard)"
      echo "--user         specify mysql user (defaults to $MYSQL_USER)"
      echo "--pass         specify mysql password (defaults to $MYSQL_PASS)"
      echo "--sql          path to local sql dump to import (optional)"
      echo "--env          Pantheon (live) or Acquia (prod) enviornment to load db+files from"
      echo "--nodrupal     flag to skip the Drupal installation step"
      echo "--apache-only  only install apache"
      echo "-h,--help      show this screen"
      exit 0
      ;;
    --name)
      shift
      name=$1
      subdir=$name.local
      domain=$name.local
      shift
      ;;
    --path)
      shift
      path=$1
      shift
      ;;
    -p|--profile)
      shift
      profile=$1
      shift
      ;;
     --user)
      shift
      user=$1
      shift
      ;;
    --host)
      shift
      host=$1
      shift
      ;;
    --pass)
      shift
      pass=$1
      shift
      ;;
    --repo)
      shift
      repo=$1
      shift
      ;;
    --domain)
      shift
      domain=$1
      shift
      ;;
    --nodrupal)
      shift
      nodrupal=1
      shift
      ;;
    --sql)
      shift
      sql=$1
      shift
      ;;
    --env)
      shift
      env=$1
      shift
      ;;
    --apache-only)
      shift
      apache_only=1
      shift
      ;;
    *)
      break
      ;;
  esac
done


# clone repo if necessary
if [ ! -z $repo ]; then
  cd $path
  git clone $repo $name
  cd $name
  path=$path/$name
  git checkout -b drop
  git checkout master
fi


# apache only
if [ -e /etc/apache2/sites-available ]; then
  # Creation the file with apache VirtualHost configuration in /etc/apache2/sites-available/  
  echo "
  <VirtualHost *:80>
    ServerAdmin $name@localhost
    DocumentRoot "$path"
    ServerName $domain
    <Directory "$path">
      Options Indexes FollowSymLinks
      AllowOverride All
      Order allow,deny
      Allow from all
    </Directory>
    ErrorLog /var/log/apache2/$domain/error.log
    LogLevel warn
    CustomLog /var/log/apache2/$domain/access.log combined
    <IfModule mpm_peruser_module>
      ServerEnvironment apache apache
    </IfModule>
  </VirtualHost>
  " | sudo tee /etc/apache2/sites-available/${domain}.conf > /dev/null
  
  # Create a directory for your apache errors log
  sudo mkdir /var/log/apache2/$domain/

  # Add the host to the hosts file
  echo 127.0.0.1 $domain | sudo tee --append /etc/hosts > /dev/null

  # Enable the site
  sudo a2ensite $domain

  # Reload Apache2
  sudo /etc/init.d/apache2 reload

  # Quit if we only want to set up an apache domain
  if [ $apache_only = 1 ]; then
    exit
  fi
fi


cd $path
pwd


# Install drupal site
if [ $nodrupal != 1 ]; then
  drush site-install $profile --db-url=mysql://$user:$pass@localhost/$name --sites-subdir=$subdir
fi


# Create drush site alias
cd sites/$subdir
echo "" > ~/.drush/$name.aliases.drushrc.php
drush site-alias --with-db --show-passwords --with-optional @self >> ~/.drush/$name.aliases.drushrc.php
sed -i "s/self/${name}/g" ~/.drush/$name.aliases.drushrc.php
cat ~/.drush/$name.aliases.drushrc.php >> ~/.drush/local.aliases.drushrc.php
rm ~/.drush/$name.aliases.drushrc.php
drush cc drush


# Load sql dump
if [ ! -z $sql ]; then
  drush sqlc < "$sql"
fi


# Load db, files from remote
if [ ! -z $env ]; then
  psite-sync $name $name $env
fi



# Log the user in
drush uli


